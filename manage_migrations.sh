 #!/bin/bash

# üóÑÔ∏è –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –¥–ª—è –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./manage_migrations.sh [–∫–æ–º–∞–Ω–¥–∞] [—Å–µ—Ä–≤–∏—Å] [–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ_–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
SERVICES=("auth" "user" "problems" "duels")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo -e "${BLUE}üóÑÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤${NC}"
    echo ""
    echo -e "${YELLOW}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:${NC}"
    echo "  ./manage_migrations.sh [–∫–æ–º–∞–Ω–¥–∞] [—Å–µ—Ä–≤–∏—Å] [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]"
    echo ""
    echo -e "${YELLOW}–ö–æ–º–∞–Ω–¥—ã:${NC}"
    echo "  status          - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"
    echo "  create          - —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é"
    echo "  upgrade         - –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏"
    echo "  downgrade       - –æ—Ç–∫–∞—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é"
    echo "  history         - –ø–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –º–∏–≥—Ä–∞—Ü–∏–π"
    echo "  reset           - —Å–±—Ä–æ—Å–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ (–û–°–¢–û–†–û–ñ–ù–û!)"
    echo "  shell           - –≤–æ–π—Ç–∏ –≤ shell —Å–µ—Ä–≤–∏—Å–∞"
    echo ""
    echo -e "${YELLOW}–°–µ—Ä–≤–∏—Å—ã:${NC}"
    echo "  auth            - Auth Service (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è)"
    echo "  user            - User Service (–ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)"
    echo "  problems        - Problems Service (–∑–∞–¥–∞—á–∏ –∏ —Ä–µ—à–µ–Ω–∏—è)"
    echo "  duels           - Duels Service (–¥—É—ç–ª–∏ –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏)"
    echo "  all             - –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo ""
    echo -e "${YELLOW}–ü—Ä–∏–º–µ—Ä—ã:${NC}"
    echo "  ./manage_migrations.sh status all"
    echo "  ./manage_migrations.sh create auth \"add new auth feature\""
    echo "  ./manage_migrations.sh upgrade user"
    echo "  ./manage_migrations.sh shell problems"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ Docker Compose –∑–∞–ø—É—â–µ–Ω
check_docker() {
    if ! docker-compose ps | grep -q "Up"; then
        echo -e "${RED}‚ùå –°–µ—Ä–≤–∏—Å—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: docker-compose up -d${NC}"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞
get_container_name() {
    local service=$1
    echo "${service}-service"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–µ—Ä–≤–∏—Å–∞
get_service_dir() {
    local service=$1
    echo "/app/${service}_service"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –≤ —Å–µ—Ä–≤–∏—Å–µ
exec_in_service() {
    local service=$1
    local command=$2
    local container=$(get_container_name $service)
    local service_dir=$(get_service_dir $service)
    
    echo -e "${BLUE}üîß –í—ã–ø–æ–ª–Ω—è—é –≤ $service: $command${NC}"
    docker-compose exec $container bash -c "cd $service_dir && $command"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞ –º–∏–≥—Ä–∞—Ü–∏–π
show_status() {
    local service=$1
    
    if [ "$service" = "all" ]; then
        for svc in "${SERVICES[@]}"; do
            echo -e "${GREEN}=== $svc Service ===${NC}"
            exec_in_service $svc "alembic current -v"
            echo ""
        done
    else
        exec_in_service $service "alembic current -v"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏
create_migration() {
    local service=$1
    local message=$2
    
    if [ -z "$message" ]; then
        echo -e "${RED}‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏${NC}"
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./manage_migrations.sh create $service \"–æ–ø–∏—Å–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏\""
        exit 1
    fi
    
    exec_in_service $service "alembic revision --autogenerate -m \"$message\""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
upgrade_migrations() {
    local service=$1
    
    if [ "$service" = "all" ]; then
        for svc in "${SERVICES[@]}"; do
            echo -e "${GREEN}=== –û–±–Ω–æ–≤–ª—è—é $svc Service ===${NC}"
            exec_in_service $svc "alembic upgrade head"
            echo ""
        done
    else
        exec_in_service $service "alembic upgrade head"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–∞—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–π
downgrade_migrations() {
    local service=$1
    local steps=${2:-"-1"}
    
    echo -e "${YELLOW}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–æ—Ç–µ—Ä–µ –¥–∞–Ω–Ω—ã—Ö!${NC}"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "–û—Ç–º–µ–Ω–µ–Ω–æ"
        exit 1
    fi
    
    exec_in_service $service "alembic downgrade $steps"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏—Å—Ç–æ—Ä–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π
show_history() {
    local service=$1
    
    if [ "$service" = "all" ]; then
        for svc in "${SERVICES[@]}"; do
            echo -e "${GREEN}=== $svc Service ===${NC}"
            exec_in_service $svc "alembic history"
            echo ""
        done
    else
        exec_in_service $service "alembic history"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –º–∏–≥—Ä–∞—Ü–∏–π
reset_migrations() {
    local service=$1
    
    echo -e "${RED}üö® –û–ü–ê–°–ù–û: –°–±—Ä–æ—Å –º–∏–≥—Ä–∞—Ü–∏–π —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ!${NC}"
    echo -e "${YELLOW}–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!${NC}"
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–≤–µ–¥–∏—Ç–µ 'RESET' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: " confirmation
    
    if [ "$confirmation" != "RESET" ]; then
        echo "–û—Ç–º–µ–Ω–µ–Ω–æ"
        exit 1
    fi
    
    exec_in_service $service "alembic stamp base"
    exec_in_service $service "alembic upgrade head"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ö–æ–¥–∞ –≤ shell —Å–µ—Ä–≤–∏—Å–∞
enter_shell() {
    local service=$1
    local container=$(get_container_name $service)
    local service_dir=$(get_service_dir $service)
    
    echo -e "${BLUE}üñ•Ô∏è  –í—Ö–æ–¥ –≤ shell $service Service...${NC}"
    echo -e "${YELLOW}–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $service_dir${NC}"
    docker-compose exec $container bash -c "cd $service_dir && bash"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
validate_service() {
    local service=$1
    
    if [ "$service" = "all" ]; then
        return 0
    fi
    
    for svc in "${SERVICES[@]}"; do
        if [ "$svc" = "$service" ]; then
            return 0
        fi
    done
    
    echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å: $service${NC}"
    echo -e "${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã: ${SERVICES[*]} all${NC}"
    exit 1
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    local command=$1
    local service=$2
    local param=$3
    
    if [ -z "$command" ] || [ "$command" = "help" ]; then
        show_help
        exit 0
    fi
    
    if [ -z "$service" ]; then
        echo -e "${RED}‚ùå –ù–µ —É–∫–∞–∑–∞–Ω —Å–µ—Ä–≤–∏—Å${NC}"
        show_help
        exit 1
    fi
    
    validate_service $service
    check_docker
    
    case $command in
        "status")
            show_status $service
            ;;
        "create")
            if [ "$service" = "all" ]; then
                echo -e "${RED}‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è${NC}"
                exit 1
            fi
            create_migration $service "$param"
            ;;
        "upgrade")
            upgrade_migrations $service
            ;;
        "downgrade")
            if [ "$service" = "all" ]; then
                echo -e "${RED}‚ùå –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è${NC}"
                exit 1
            fi
            downgrade_migrations $service "$param"
            ;;
        "history")
            show_history $service
            ;;
        "reset")
            if [ "$service" = "all" ]; then
                echo -e "${RED}‚ùå –°–±—Ä–æ—Å –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è${NC}"
                exit 1
            fi
            reset_migrations $service
            ;;
        "shell")
            if [ "$service" = "all" ]; then
                echo -e "${RED}‚ùå –í—Ö–æ–¥ –≤ shell –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è${NC}"
                exit 1
            fi
            enter_shell $service
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $command${NC}"
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"