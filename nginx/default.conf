server {
    listen 80;
    server_name localhost;

    # ==================================
    # ===   Proxy Headers
    # ==================================
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # ==================================
    # ===   Frontend
    # ==================================
    # All non-API requests go to the frontend container
    location / {
        proxy_pass http://frontend:80;
    }

    # ==================================
    # ===   Backend Services
    # ==================================

    # Auth Service (e.g., /auth/token)
    location /auth/ {
        proxy_pass http://auth-service:8000/auth/;
    }

    # User Service (e.g., /users/dashboard/stats)
    location /users/ {
        proxy_pass http://user-service:8000/users/;
    }

    # Duels Service with WebSockets (e.g., /api/v1/duels/ws/...)
    # This must come BEFORE the general /api/v1/ block
    location /api/v1/duels/ {
        proxy_pass http://duels-service:8004/api/v1/duels/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Problems Service (e.g., /api/v1/problems)
    location /api/v1/ {
        proxy_pass http://problems-service:8000/api/v1/;
    }
} 
server {
    listen 443 ssl;
    server_name battlestack.me www.battlestack.me;

    ssl_certificate     /etc/letsencrypt/live/battlestack.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/battlestack.me/privkey.pem;

    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /auth/ {
        proxy_pass http://auth-service:8000/auth/;
    }

    location /users/ {
        proxy_pass http://user-service:8000/users/;
    }

    location /api/v1/duels/ {
        proxy_pass http://duels-service:8004/api/v1/duels/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /api/v1/ {
        proxy_pass http://problems-service:8000/api/v1/;
    }
}
