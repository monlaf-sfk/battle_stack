services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_proxy
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - auth-service
      - user-service
      - problems-service
      - duels-service
    networks:
      - internal

  redis:
    image: redis:7
    expose:
      - "6379"
    networks:
      - internal

  # Auth Service Database
  auth-db:
    image: postgres:16
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
      POSTGRES_DB: auth_db
    expose:
      - "5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  # User Service Database  
  user-db:
    image: postgres:16
    environment:
      POSTGRES_USER: user_user
      POSTGRES_PASSWORD: user_password
      POSTGRES_DB: user_db
    expose:
      - "5432"
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  # Problems Service Database
  problems-db:
    image: postgres:16
    environment:
      POSTGRES_USER: problems_user
      POSTGRES_PASSWORD: problems_password
      POSTGRES_DB: problems_db
    expose:
      - "5432"
    volumes:
      - problems_postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  # Duels Service Database
  duels-db:
    image: postgres:16
    environment:
      POSTGRES_USER: duels_user
      POSTGRES_PASSWORD: duels_password
      POSTGRES_DB: duels_db
    expose:
      - "5432"
    volumes:
      - duels_postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  auth-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.auth
    env_file:
      - ./backend/.env.auth
    depends_on:
      - redis
      - auth-db
    ports:
      - "8001:8000"
    entrypoint: /app/auth_service/entrypoint.sh
    environment:
      - UVICORN_LOG_LEVEL=info
      - UVICORN_ACCESS_LOG=true
    networks:
      - internal

  user-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.user
    env_file:
      - ./backend/.env.user
    depends_on:
      - redis
      - user-db
    ports:
      - "8002:8000"
    entrypoint: /app/user_service/entrypoint.sh
    environment:
      - UVICORN_LOG_LEVEL=info
      - UVICORN_ACCESS_LOG=true
    networks:
      - internal

  problems-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.problems
    env_file:
      - ./backend/.env.problems
    depends_on:
      - redis
      - problems-db
    ports:
      - "8003:8000"
    entrypoint: /app/problems_service/entrypoint.sh
    environment:
      - UVICORN_LOG_LEVEL=info
      - UVICORN_ACCESS_LOG=true
    networks:
      - internal

  duels-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.duels
    env_file:
      - ./backend/.env.duels
    depends_on:
      - redis
      - duels-db
    ports:
      - "8004:8004"
    entrypoint: /app/duels_service/entrypoint.sh
    environment:
      - JUDGE0_URL=http://104.248.241.191:2358
      - JUDGE0_API_KEY=
      - UVICORN_LOG_LEVEL=info
      - UVICORN_ACCESS_LOG=true
    networks:
      - internal

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "80"
    depends_on:
      - auth-service
      - user-service
      - problems-service
      - duels-service
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  auth_postgres_data:
  user_postgres_data:
  problems_postgres_data:
  duels_postgres_data: 