/**
 * üèÜ SUBMISSION RESULT COMPONENT
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ—à–µ–Ω–∏—è.
 * –¢–µ–ø–µ—Ä—å –æ–Ω —É–Ω–∏–≤–µ—Ä—Å–∞–ª–µ–Ω –∏ –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏, —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —É—Å–ø–µ—à–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
 */

import React from 'react';
import { 
  ServerCrash
} from 'lucide-react';

// –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ª–∏–±–æ –æ—à–∏–±–∫—É, –ª–∏–±–æ —É—Å–ø–µ—à–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
interface UniversalResult {
  error?: string;
  details?: string[];
  message?: string; // –î–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–∏–ø–∞ "–û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞..."
  status?: string;
  accepted?: boolean;
  score?: number;
  passed_tests?: number;
  total_tests?: number;
  execution_time?: string;
  memory_usage?: string;
}

interface SubmissionResultProps {
  result: UniversalResult | null;
  isLoading: boolean;
}

const SubmissionResult: React.FC<SubmissionResultProps> = ({ result, isLoading }) => {
  if (isLoading) {
    return (
      <div className="flex flex-col items-center justify-center h-full text-gray-400">
        <div className="w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mb-4" />
        <span>Executing...</span>
      </div>
    );
  }

  if (!result) {
    return (
      <div className="flex items-center justify-center h-full text-gray-500">
        <span>Click 'Run' or 'Submit' to see the output here.</span>
      </div>
    );
  }

  // === –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –û–®–ò–ë–ö–ò ===
  if (result.error) {
    return (
      <div className="bg-red-900/20 border border-red-500/30 rounded-lg p-4 text-white">
        <div className="flex items-start">
          <div className="flex-shrink-0">
            <ServerCrash className="h-6 w-6 text-red-400" />
          </div>
          <div className="ml-3">
            <h3 className="text-lg font-medium text-red-300">{result.error}</h3>
            {result.details && result.details.length > 0 && (
              <div className="mt-2 text-sm text-red-200">
                <ul className="list-disc space-y-1 pl-5">
                  {result.details.map((detail, index) => (
                    <li key={index}>{detail}</li>
                  ))}
                </ul>
              </div>
            )}
          </div>
        </div>
      </div>
    );
  }
  
  // === –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–æ–∂–∏–¥–∞–Ω–∏–µ...") ===
  if (result.message && !result.status) {
      return (
        <div className="flex items-center justify-center h-full text-gray-400">
          <span>{result.message}</span>
        </div>
      );
  }

  // === –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –£–°–ü–ï–®–ù–û–ì–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê (—Å—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞) ===
  // (–ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∞—à–∞ —Å–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ —Ç.–¥.)
  // –≠—Ç–æ—Ç –±–ª–æ–∫ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, –∫–æ–≥–¥–∞ WebSocket –≤–µ—Ä–Ω–µ—Ç –ø–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.
  if (result.status) {
    return (
      <div className="text-green-400">
        <h3 className="text-lg font-bold">Success!</h3>
        <p>Status: {result.status}</p>
        <p>Passed: {result.passed_tests}/{result.total_tests}</p>
        {/* –î–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—É—é —á–∞—Å—Ç—å –≤–∞—à–µ–≥–æ –∫—Ä–∞—Å–∏–≤–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∑–¥–µ—Å—å */}
      </div>
    );
  }

  return null; // –ù–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ result –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∏ –æ–¥–Ω–æ–º—É –∏–∑ —É—Å–ª–æ–≤–∏–π
};

export default SubmissionResult; 